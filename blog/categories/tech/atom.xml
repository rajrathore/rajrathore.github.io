<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | Raj Rathore]]></title>
  <link href="http://www.rajrathore.com/blog/categories/tech/atom.xml" rel="self"/>
  <link href="http://www.rajrathore.com/"/>
  <updated>2014-07-10T16:07:53+05:30</updated>
  <id>http://www.rajrathore.com/</id>
  <author>
    <name><![CDATA[Raj Rathore]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Renew Heroku SSL Certificate by Godaddy]]></title>
    <link href="http://www.rajrathore.com/renew-heroku-ssl-certificate-issued-by-godaddy/"/>
    <updated>2014-07-05T09:16:32+05:30</updated>
    <id>http://www.rajrathore.com/renew-heroku-ssl-certificate-issued-by-godaddy</id>
    <content type="html"><![CDATA[<p>I recently renewed my ssl cert for heroku hosted domain registered at godaddy. This post is a how to Guide for renewing/updating SSL Certificate issued by godaddy for heroku hosted domain without changing dns and keeping old ssl endpoint url. I hope it&rsquo;ll help somebody.</p>

<!-- more -->


<h3>Step 1: Renew Godaddy certificate</h3>

<p>Apply renewal credit at godaddy and use the previous certificate signing request(csr), selecting option of third party hosted domain and submit.</p>

<h3>Step 2: Download Certificates Zip and Combine Certs</h3>

<p>After the certificate has been issued by godaddy, download certs for &lsquo;Nginx&rsquo; server. unzip the zipped file, cd into directory, and combine certificates.</p>

<p><code>ruby
cat 48bcdx31xxxx.crt sf_bundle-g2-g1.crt &gt; combined.crt
</code></p>

<h3>Step 3: Update Certificate at Heroku SSL Endpoint</h3>

<p>run certificate update command</p>

<p><code>ruby
heroku certs:update combined.crt server.key
</code></p>

<p>Confirm the changes by typing app_name.</p>

<h3>Step 4: Check Certificate Info</h3>

<p><code>ruby
heroku certs:info --app=app_name
</code></p>

<h3>Step 5: Done!</h3>

<p>Done! and after few seconds app is running on previous ssl endpoint url. So, No need to update dns.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Localhost Tunneling, Working With Facebook Open Graph]]></title>
    <link href="http://www.rajrathore.com/localhost-tunneling-working-with-facebook-open-graph/"/>
    <updated>2014-04-26T09:39:18+05:30</updated>
    <id>http://www.rajrathore.com/localhost-tunneling-working-with-facebook-open-graph</id>
    <content type="html"><![CDATA[<p>I&rsquo;m currently developing an app which uses facebook Open graph API. Using localhost works fine with facebook authentication but when you want to use graph api then facebook needs access to the webpage, so that it can parse open graph meta tags.</p>

<!-- more -->


<p>The solution to this problem is either deploy your app online or allow localhost tunneling so that facebook can access it. I prefer localhost tunneling when working in my development environment.</p>

<p>Surround your pullquote like this {" text to be quoted "}
<strong>ngrok</strong> is easy to use and it takes just 2 minutes to signup and expose your webserver. Sign up is not required but it doesn&rsquo;t take much time so I did.</p>

<h2>Steps</h2>

<h3>1. Download ngrok</h3>

<p>I downloaded ngrok on my mac but it&rsquo;s available for windows and linux as well. it&rsquo;s just a small zip file, just takes few seconds to download.</p>

<h3>2. unzip it</h3>

<pre><code>unzip /path/to/ngrok.zip
</code></pre>

<h3>3. Run it</h3>

<pre><code>ngrok -authtoken your_auth_token port
</code></pre>

<p>in above command <strong>your_auth_token</strong> is your authentication token and <strong>port</strong> is the port which you want to expose.</p>

<p>``` ruby ngrok <a href="https://ngrok.com/">https://ngrok.com/</a> link
Tunnel Status                 online
Version                       1.6/1.5
Forwarding                    <a href="http://9d322c2.ngrok.com">http://9d322c2.ngrok.com</a> &ndash;> 127.0.0.1:80
Forwarding                    <a href="https://9d322c2.ngrok.com">https://9d322c2.ngrok.com</a> &ndash;> 127.0.0.1:80
Web Interface                 127.0.0.1:4040</p>

<h1>Conn                        0</h1>

<p>Avg Conn Time                 0.00ms
```</p>

<p>where <a href="http://9d322c2.ngrok.com">http://9d322c2.ngrok.com</a> is the url which you can use to access your local web server. I have closed this tunnel, So you won&rsquo;t able to access this url, it&rsquo;s just for example purpose here.</p>

<p>Thanks for reading.</p>
]]></content>
  </entry>
  
</feed>
